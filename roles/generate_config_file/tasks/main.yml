---

- name: Generate random values
  command: ./ethkey generate random
  check_mode: no
  args:
    chdir: "{{ role_path }}/files/"
  register: ethkey_rand

- name: Create map from string
  set_fact:
    ethkey_map: "{{ dict(_keys|zip(_vals)) }}"
  vars:
    _arr: "{{ ethkey_rand.stdout.split('\n')|map('trim')|select()|list }}"
    _keys: "{{ _arr|map('regex_replace', '^(.*?):(.*)$', '\\1')|map('trim')|list }}"
    _vals: "{{ _arr|map('regex_replace', '^(.*?):(.*)$', '\\2')|map('trim')|list }}"

- name: Write address to config file
  copy:
    content: "ADDRESS={{ ethkey_map.address }}"
    dest: "{{ config_file_name }}"
    mode: '0666'

- name: Write private key to config file
  lineinfile:
    path: "{{ config_file_name }}"
    line: "PRIVATE_KEY={{ ethkey_map.secret }}"
    insertbefore: BOE

- name: Generate random values
  command: ./ethkey generate random
  check_mode: no
  args:
    chdir: "{{ role_path }}/files/"
  register: ethkey_second

- name: Create map from string
  set_fact:
    ethkey_second_map: "{{ dict(_keys|zip(_vals)) }}"
  vars:
    _arr: "{{ ethkey_second.stdout.split('\n')|map('trim')|select()|list }}"
    _keys: "{{ _arr|map('regex_replace', '^(.*?):(.*)$', '\\1')|map('trim')|list }}"
    _vals: "{{ _arr|map('regex_replace', '^(.*?):(.*)$', '\\2')|map('trim')|list }}"

- name: Write result private key to config file
  lineinfile:
    path: "{{ config_file_name }}"
    line: "RESULT_PRIVATE_KEY={{ ethkey_second_map.secret }}"
    insertbefore: BOE

- name: Write result address to config file
  lineinfile:
    path: "{{ config_file_name }}"
    line: "RESULT_ADDRESS={{ ethkey_second_map.address }}"
    insertbefore: BOE
    
- name: Write TASK_EXECUTION_PRICE to config file
  lineinfile:
    path: "{{ config_file_name }}"
    line: "{{ 'TASK_EXECUTION_PRICE=' + lookup('ansible.builtin.env', 'TASK_EXECUTION_PRICE') }}"
    insertafter: EOF

- name: Write NETWORK to config file
  lineinfile:
    path: "{{ config_file_name }}"
    line: "{{ 'NETWORK=' + lookup('ansible.builtin.env', 'NETWORK') }}"
    insertafter: EOF

- name: Write BLOXBERG RPC to config file
  lineinfile:
    path: "{{ config_file_name }}"
    line: "{{ 'BLOXBERG_RPC_URL=' + lookup('ansible.builtin.env', 'BLOXBERG_RPC_URL') }}"
    insertafter: EOF
  when: lookup('ansible.builtin.env', 'NETWORK') == 'BLOXBERG' or lookup('ansible.builtin.env', 'NETWORK') == 'AUTO'

- name: Write BLOXBERG TESTNET RPC to config file
  lineinfile:
    path: "{{ config_file_name }}"
    line: "{{ 'TESTNET_RPC_URL=' + lookup('ansible.builtin.env', 'TESTNET_RPC_URL') }}"
    insertafter: EOF
  when: lookup('ansible.builtin.env', 'NETWORK') == 'TESTNET'

- name: Write POLYGON RPC to config file
  lineinfile:
    path: "{{ config_file_name }}"
    line: "{{ 'POLYGON_RPC_URL=' + lookup('ansible.builtin.env', 'POLYGON_RPC_URL') }}"
    insertafter: EOF
  when: lookup('ansible.builtin.env', 'NETWORK') == 'POLYGON' or lookup('ansible.builtin.env', 'NETWORK') == 'AUTO' or lookup('ansible.builtin.env', 'NETWORK') == 'BLOXBERG'

- name: Write AMOY RPC to config file
  lineinfile:
    path: "{{ config_file_name }}"
    line: "{{ 'AMOY_RPC_URL=' + lookup('ansible.builtin.env', 'AMOY_RPC_URL') }}"
    insertafter: EOF
  when: lookup('ansible.builtin.env', 'NETWORK') == 'AMOY'
